// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurisCode.Data;

#nullable disable

namespace SurisCode.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250227175355_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("SurisCode.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("FK_Schedule")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FK_Service")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FK_Schedule");

                    b.HasIndex("FK_Service", "Date", "FK_Schedule")
                        .IsUnique();

                    b.ToTable("Reservations", (string)null);
                });

            modelBuilder.Entity("SurisCode.Entities.Schedule", b =>
                {
                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Time");

                    b.ToTable("Schedules", (string)null);

                    b.HasData(
                        new
                        {
                            Time = "11:00"
                        },
                        new
                        {
                            Time = "12:00"
                        },
                        new
                        {
                            Time = "13:00"
                        },
                        new
                        {
                            Time = "14:00"
                        },
                        new
                        {
                            Time = "15:00"
                        },
                        new
                        {
                            Time = "16:00"
                        },
                        new
                        {
                            Time = "17:00"
                        });
                });

            modelBuilder.Entity("SurisCode.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Services", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kinesiologia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Psicología"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nutrición"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Osteopatía"
                        });
                });

            modelBuilder.Entity("SurisCode.Entities.Reservation", b =>
                {
                    b.HasOne("SurisCode.Entities.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("FK_Schedule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurisCode.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("FK_Service")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Service");
                });
#pragma warning restore 612, 618
        }
    }
}
